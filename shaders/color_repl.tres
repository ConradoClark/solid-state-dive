[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://bjha3lb63msp"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_wl3yy"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.1, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_ll647"]
source = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_mcd6u"]
parameter_name = "Source"

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_humf4"]
parameter_name = "Target"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xhikb"]
input_name = "uv"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 Source : source_color;
uniform vec4 Target : source_color;



void fragment() {
// Input:5
	vec2 n_out5p0 = UV;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(TEXTURE, n_out5p0);


// ColorParameter:3
	vec4 n_out3p0 = Source;


// ColorParameter:4
	vec4 n_out4p0 = Target;


	vec3 n_out12p0;
// If:12
	float n_in12p2 = 0.10000;
	if(abs(n_out2p0.x - n_out3p0.x) < n_in12p2)
	{
		n_out12p0 = vec3(n_out4p0.xyz);
	}
	else if(n_out2p0.x < n_out3p0.x)
	{
		n_out12p0 = vec3(n_out2p0.xyz);
	}
	else
	{
		n_out12p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out12p0;


}
"
graph_offset = Vector2(23.1649, 157.534)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(680, 260)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_ll647")
nodes/fragment/2/position = Vector2(80, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_mcd6u")
nodes/fragment/3/position = Vector2(20, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorParameter_humf4")
nodes/fragment/4/position = Vector2(20, 540)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_xhikb")
nodes/fragment/5/position = Vector2(-260, 220)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_wl3yy")
nodes/fragment/12/position = Vector2(420, 260)
nodes/fragment/connections = PackedInt32Array(5, 0, 2, 0, 2, 0, 12, 0, 3, 0, 12, 1, 4, 0, 12, 3, 2, 0, 12, 4, 2, 0, 12, 5, 12, 0, 0, 0)
